import{_ as t,c as a,o as e,V as d}from"./chunks/framework.qmJTxtaM.js";const b=JSON.parse('{"title":"CLI 命令","description":"","frontmatter":{"sort":80,"urlname":"bry3d3lwe206xuor","catalog":"入门指引","tags":"Elog-Docs","title":"CLI 命令","date":"2023-04-06 21:31:00","updated":"2025-01-17 13:48:00"},"headers":[],"relativePath":"notion/bry3d3lwe206xuor.md","filePath":"notion/bry3d3lwe206xuor.md","lastUpdated":1740072944000}'),s={name:"notion/bry3d3lwe206xuor.md"},l=d('<h1 id="cli-命令" tabindex="-1">CLI 命令 <a class="header-anchor" href="#cli-命令" aria-label="Permalink to &quot;CLI 命令&quot;">​</a></h1><h2 id="version" tabindex="-1">version <a class="header-anchor" href="#version" aria-label="Permalink to &quot;version&quot;">​</a></h2><p>查看当前 Elog 的版本号</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">elog</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><h2 id="init" tabindex="-1">init <a class="header-anchor" href="#init" aria-label="Permalink to &quot;init&quot;">​</a></h2><p>初始化 Elog 配置</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">elog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init [option] [value]</span></span></code></pre></div><table><thead><tr><th>option</th><th>alias</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>--config</td><td>-c</td><td>自定义配置文件的名称</td><td>elog.config.js</td></tr><tr><td>--env</td><td>-e</td><td>自定义缓存文件的名称</td><td>elog.cache.json</td></tr></tbody></table><h2 id="sync" tabindex="-1">sync <a class="header-anchor" href="#sync" aria-label="Permalink to &quot;sync&quot;">​</a></h2><p>同步文章</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">elog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sync [option] [value]</span></span></code></pre></div><table><thead><tr><th>option</th><th>alias</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>--config</td><td>-c</td><td>指定配置文件 path</td><td>elog.config.js</td></tr><tr><td>--env</td><td>-e</td><td>指定环境文件 path</td><td>-</td></tr><tr><td>--cache</td><td>-a</td><td>指定缓存文件 path</td><td>elog.cache.json</td></tr><tr><td>--debug</td><td></td><td>打印更多调试日志</td><td></td></tr><tr><td>--force</td><td></td><td>强制同步</td><td></td></tr><tr><td>--full-cache</td><td></td><td>缓存文档全部信息</td><td></td></tr><tr><td>--disable-cache</td><td></td><td>禁用缓存进行同步，等同于删除缓存文件进行全量更新</td><td></td></tr></tbody></table><h3 id="force-说明" tabindex="-1">--force 说明 <a class="header-anchor" href="#force-说明" aria-label="Permalink to &quot;--force 说明&quot;">​</a></h3><p>当需要写作平台的文档和本地文档保持一致时，可添加此命令行参数。例如在写作平台删除文档A后，可通过<code>--force</code>参数在本次同步文档时删除本地的文档A。</p><p>使用前请注意以下事项：</p><ul><li>只支持文档删除时强制同步，不支持文档改名后删除改名前的文档</li><li>你也可以通过<code>elog clean</code>直接清空本地文档后，重新同步文档</li></ul><h3 id="full-cache-说明" tabindex="-1">--full-cache 说明 <a class="header-anchor" href="#full-cache-说明" aria-label="Permalink to &quot;--full-cache 说明&quot;">​</a></h3><p><strong>请注意，使用此参数后，缓存文件的大小大约是原文档的2-10倍！</strong></p><p>常用于本地调试，<code>elog.cache.json</code>缓存文件是实现Elog增量同步的关键，一般情况下只会保存文档的一部份原始信息。</p><p>当需要对比原文档和Elog处理之后的文档时，可通过此命令行缓存文档处理过程中的所有信息。</p><h2 id="clean" tabindex="-1">clean <a class="header-anchor" href="#clean" aria-label="Permalink to &quot;clean&quot;">​</a></h2><p>清理文章、上次同步缓存、上次同步时间</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">elog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean [option] [value]</span></span></code></pre></div><table><thead><tr><th>option</th><th>alias</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>--config</td><td>-c</td><td>指定配置文件 path，用于读取存储文章目录</td><td>elog.config.js</td></tr><tr><td>--cache</td><td>-a</td><td>指定缓存文件 path</td><td>elog.cache.json</td></tr></tbody></table><h2 id="upgrade" tabindex="-1">upgrade <a class="header-anchor" href="#upgrade" aria-label="Permalink to &quot;upgrade&quot;">​</a></h2><p>更新全局 <code>elog</code> 版本到最新正式版<code>(latest)</code> 版本</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">elog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span></code></pre></div>',27),i=[l];function o(h,n,c,r,p,g){return e(),a("div",null,i)}const k=t(s,[["render",o]]);export{b as __pageData,k as default};
