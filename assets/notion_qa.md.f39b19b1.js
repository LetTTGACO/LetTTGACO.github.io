import{_ as e,c as o,o as a,a as l}from"./app.396a12b7.js";const y=JSON.parse('{"title":"常见问题","description":"","frontmatter":{"status":"已发布","sort":50,"urlname":"qa","上次编辑时间":"2023-10-24T13:14:00.000Z","catalog":"关于Elog","tags":"Elog-Docs","title":"常见问题","date":"2023-07-23 03:37:00","updated":"2023-10-24 21:14:00"},"headers":[],"relativePath":"notion/qa.md","lastUpdated":1698662872000}'),s={name:"notion/qa.md"},n=l(`<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-hidden="true">#</a></h1><p><strong>大部分问题都可以在文档中找到解决办法，请优先从</strong> <a href="/notion/start">快速开始</a> <strong>阅读文档，再进行实际操作。</strong></p><p>如果还是运行报错，请在 Github 中提交 <a href="https://github.com/LetTTGACO/elog/issues" target="_blank" rel="noreferrer">Issues</a> 或加入 <a href="/notion/la9toqncox96kfp8">elog 反馈交流群</a></p><h2 id="配置问题" tabindex="-1">配置问题 <a class="header-anchor" href="#配置问题" aria-hidden="true">#</a></h2><p><code>elog.config.js</code>为 Elog 的配置文件，其中以 <code>p<wbr>rocess.env</code>开头的不需要改动，且为<strong>必填信息。</strong></p><p>例如 <code>p<wbr>rocess.env.YUQUE_TOKEN</code>为语雀账号相关敏感信息，用于本地同步时在<code>.elog.env</code>中指定<code>YUQUE_TOKEN=你的语雀 Token</code>，其他配置可根据实际需求改动。</p><h2 id="elog-运行报缺少参数" tabindex="-1">Elog 运行报缺少参数 <a class="header-anchor" href="#elog-运行报缺少参数" aria-hidden="true">#</a></h2><ol><li>检查 <code>elog.config.js</code>中所有 <code>platform</code> 属性的值是否是你对应平台的值。例如如果想用语雀 Token 的方式同步语雀文档，则 <code>write.platform = yuque</code>；如果是使用语雀账号密码的方式，则<code>write.platform = yuque-pwd</code></li><li>检查<code>.elog.env</code>中是否填写账号信息。无论用哪种方式同步语雀，<code>.elog.env</code>中的<code>YUQUE_LOGIN</code>和<code>YUQUE_REPO</code>都是必填参数。其他必填参数请看本文档相关配置表格中的是否必填字段</li></ol><h2 id="如何重新全量同步文档" tabindex="-1">如何重新全量同步文档 <a class="header-anchor" href="#如何重新全量同步文档" aria-hidden="true">#</a></h2><p>elog 默认为增量更新，只有该文档重新修改过，再次同步时，才会重新拉取该文档。如果想重新全量同步文档。有以下两种办法：</p><ol><li>运行 <code>elog clean</code>，Elog 将会自动清除所有文档、本地图片、缓存文件<code>(elog.cache.json)</code></li><li><code>elog.cache.json</code>为 Elog 增量同步的关键，可<strong>手动删除</strong>此文件，推荐同时手动删除所有文档、本地图片</li></ol><h2 id="如何同步多个知识库-数据表" tabindex="-1">如何同步多个知识库/数据表 <a class="header-anchor" href="#如何同步多个知识库-数据表" aria-hidden="true">#</a></h2><p>在语雀中， Elog 是以知识库为维度进行同步，一次只能同步一个知识库。</p><p>如果想要同时同步多个知识库：</p><ol><li><p>复制<code>elog.config.js</code> 和<code>.elog.env</code>，并改名为<code>elog-xxx.config.js</code>和<code>.elog-xxx.env</code>；</p></li><li><p>在<code>elog-xxx.config.js</code>配置文件中指定另外一个知识库的导出目录(<code>deploy.local.outputDir</code>)；</p></li><li><p>在<code>.elog-xxx.env</code>指定另一个知识库的 <code>repo、login</code>等相关值。</p></li><li><p>并在运行同步命令时指定相关参数：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 此命令表示，将使用.elog-xxx.env中的账号信息，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 指定读取elog-xxx.config.js中的配置，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 并将缓存文件命名为elog-xxx.cache.json</span></span>
<span class="line"><span style="color:#FFCB6B;">elog</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">sync</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.elog-xxx.env</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-a</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">elog-xxx.cache.json</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">elog-xxx.config.js</span></span>
<span class="line"></span></code></pre></div></li></ol><p>在 Notion 或其他写作平台也是如此，需要指定不同的配置文件<code>(elog.config.js)</code>、缓存文件<code>(elog.cache.json)</code>、本地环境变量文件<code>(.elog.env)</code>。</p><blockquote><p>如果有使用 github，请不要将<code>.elog.env</code>配置文件上传到 github，需要在<code>.gitignore</code>中忽略此文件</p></blockquote><p>具体可参考 本文档（Elog-Docs）源码：<a href="https://github.com/LetTTGACO/elog-docs" target="_blank" rel="noreferrer">https://github.com/LetTTGACO/elog-docs</a></p><h2 id="elog-运行时找不到该命令" tabindex="-1">elog 运行时找不到该命令 <a class="header-anchor" href="#elog-运行时找不到该命令" aria-hidden="true">#</a></h2><ol><li>检查是否<a href="/notion/start#cli-工具安装">全局安装过 elog</a></li><li>重启命令行工具，如果全局安装过也运行不了，大概率是命令行工具的配置的问题。可采用备用方案：将<code>elog</code>运行命令改为<code>npx @elog/cli</code></li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 初始化 elog 配置文件</span></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@elog/cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 本地同步命令</span></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@elog/cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">sync</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.elog.env</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 清除本地缓存</span></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@elog/cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">clean</span></span>
<span class="line"></span></code></pre></div><h2 id="同步时卡住不动" tabindex="-1">同步时卡住不动 <a class="header-anchor" href="#同步时卡住不动" aria-hidden="true">#</a></h2><ul><li>在 Github 自动化流程中同步卡住</li><li>本地同步运行时卡住</li><li>图片下载时卡住</li><li>文档下载时卡住</li></ul><h3 id="解决办法" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法" aria-hidden="true">#</a></h3><p>在全量同步时，因为语雀/FlowUs 为国内平台，有时会在 Github 等国外环境运行时由于网络问卡住。此时可以在本地先手动运行一遍，提交缓存文件到 Github，后续的增量同步会快很多。相反用 Notion 在本地进行同步时，也有同样的问题，放在 Github 同步就会快很多。</p><p>还有一种可能是由于需要同步的文档中的新图片数量太多，所以每次都是新增上传图片到 CDN，会导致整体的流程变慢甚至失败。因为 Elog 会检测图片在 CDN 是否已经上传过，可以多试几次。</p><p>由于 Notion 的 API 在大部分情况下都很慢，甚至会下载文档失败。这是官方的问题，可以选择降低 Notion 下载文档时的并发数（默认为 3）。在 Elog 配置文件中设置<code>write.notion.limit=1</code>，降低文档下载并发数，也可多试几次。</p><h2 id="同步时报超时错误" tabindex="-1">同步时报超时错误 <a class="header-anchor" href="#同步时报超时错误" aria-hidden="true">#</a></h2><ul><li>下载文档超时</li><li>下载图片超时</li></ul><h3 id="解决办法-1" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法-1" aria-hidden="true">#</a></h3><p>默认超时时间为 60s，如果经常超时，可配置环境变量<code>p<wbr>rocess.env.REQUEST_TIMEOUT</code>，增加请求超时时间。</p><p>本地同步时，在.elog.env 文件新增<code>REQUEST_TIMEOUT=900000</code>，设置更大的超时时间</p><p>在 CI/CD 中，可在自动化平台注入同样的环境变量即可</p><p>如果遇到图片下载失败，可升级到 Elog 最新版<code>@elog/cli@0.7.2</code>及以上版本，Elog 会在上次同步时某文章存在图片下载失败时，第二次同步会重新尝试同步该文章</p><h2 id="elog-主要功能是批量导出" tabindex="-1">Elog 主要功能是批量导出 <a class="header-anchor" href="#elog-主要功能是批量导出" aria-hidden="true">#</a></h2><p>Elog 在大部分场景下都只是一个批量导出<code>markdown</code>工具，不涉及部署、数据库等功能。</p><p>自动化部署、博客平台的路由配置、自定义属性等功能，都是需要各种软件/脚本辅助完成。</p><p>不可否认，配置 Elog，特别是一定的复杂场景，确实需要一定的代码基础知识，但 Elog 的其中一个目标也是尽可能地提供开箱即用的配置支持，降低配置的复杂度。</p><p>在 Elog 还没进化到这种程度之前，还是需要大家尽量熟悉 Elog 使用文档。如果有解决不了的问题，也可以加交流群讨论。</p>`,39),c=[n];function t(p,i,r,d,h,g){return a(),o("div",null,c)}const x=e(s,[["render",t]]);export{y as __pageData,x as default};
